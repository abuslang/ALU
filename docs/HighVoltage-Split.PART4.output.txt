Verilog Output
Author: Abdus Quadri
github.com/abuslang

*******************************NOTE****************************************
o For all runs, the program cycles through opcodes 0000 to 1110.
o This file cotains outputs from several runs with different A and B value
  to demonstrate that the system is working as intended.
****************************************************************************


//***************************************************************************************************
//***************************************************************************************************
RUN 1

A = 5
B = 0

++================++================++======++===++===++===================================++
||       A        ||       B        ||Opcode||Clk||Err||                Output             ||
  0000000000000101  0000000000000000  0000    0    0    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  0000000000000101  0000000000000000  0000    1    0    0000000000000000xxxxxxxxxxxxxxxx
  0000000000000101  0000000000000000  0000    0    0    0000000000000000xxxxxxxxxxxxxxxx
  0000000000000101  0000000000000000  0001    1    0    00000000000000000000000000000101
  0000000000000101  0000000000000000  0001    0    0    00000000000000000000000000000101
  0000000000000101  0000000000000000  0010    1    0    00000000000000000000000000000101
  0000000000000101  0000000000000000  0010    0    0    00000000000000000000000000000101
++================++================++======++===++===++===================================++
  0000000000000101  0000000000000000  0011    1    0    00000000000000000000000000000000
++================++================++======++===++===++===================================++
  0000000000000101  0000000000000000  0011    0    0    00000000000000000000000000000000
  0000000000000101  0000000000000000  0100    1    1    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  0000000000000000  0000000000000000  1110    0    0    00000000000000000000000000000000
  0000000000000000  0000000000000000  0101    1    0    0000000000000000xxxxxxxxxxxxxxxx
  0000000000000000  0000000000000000  0101    0    0    0000000000000000xxxxxxxxxxxxxxxx
  0000000000000000  0000000000000000  0110    1    0    00000000000000000000000000000000
  0000000000000000  0000000000000000  0110    0    0    00000000000000000000000000000000
++================++================++======++===++===++===================================++
  
Comments: No-op functions as intended. Error occurs when dividing by 0 and system subsequently is reset.
			Similar situation will occur when overflow occurs in the ADDER_SUBTRACTOR.



//***************************************************************************************************
//***************************************************************************************************
RUN 2

A = 6990
B = 3201


++================++================++======++===++===++===================================++
||       A        ||       B        ||Opcode||Clk||Err||                Output             ||
  0001101101001110  0000110010000001  0000    0    0    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
  0001101101001110  0000110010000001  0000    1    0    0000000000000000xxxxxxxxxxxxxxxx
  0001101101001110  0000110010000001  0000    0    0    0000000000000000xxxxxxxxxxxxxxxx
  0001101101001110  0000110010000001  0001    1    0    00000000000000000010011111001111
  0001101101001110  0000110010000001  0001    0    0    00000000000000000010011111001111
  0001101101001110  0000110010000001  0010    1    0    00000000000000000000111011001101
  0001101101001110  0000110010000001  0010    0    0    00000000000000000000111011001101
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  0011    1    0    00000001010101010110101001001110
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  0011    0    0    00000001010101010110101001001110
  0001101101001110  0000110010000001  0100    1    0    00000000000000100000001001001100
  0001101101001110  0000110010000001  0100    0    0    00000000000000100000001001001100
  0001101101001110  0000110010000001  0101    1    0    00000000000000000000001001001100
  0001101101001110  0000110010000001  0101    0    0    00000000000000000000001001001100
  0001101101001110  0000110010000001  0110    1    0    00000000000000000000000000000001
  0001101101001110  0000110010000001  0110    0    0    00000000000000000000000000000001
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  0111    1    0    00000000000000000001111111001111
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  0111    0    0    00000000000000000001111111001111
  0001101101001110  0000110010000001  1000    1    0    11111111111111111110010010110001
  0001101101001110  0000110010000001  1000    0    0    11111111111111111110010010110001
  0001101101001110  0000110010000001  1001    1    0    11111111111111111110100000110000
  0001101101001110  0000110010000001  1001    0    0    11111111111111111110100000110000
  0001101101001110  0000110010000001  1010    1    0    00000000000000000000000000000000
  0001101101001110  0000110010000001  1010    0    0    00000000000000000000000000000000
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  1011    1    0    11111111111111111110000000110000
++================++================++======++===++===++===================================++
  0001101101001110  0000110010000001  1011    0    0    11111111111111111110000000110000
  0001101101001110  0000110010000001  1100    1    0    11111111111111111110100000110000
  0001101101001110  0000110010000001  1100    0    0    11111111111111111110100000110000
  0000110010000001  0000110010000001  1101    1    0    00000000000000000000110010000001
  0000110010000001  0000110010000001  1101    0    0    00000000000000000000110010000001
  0000000000000000  0000000000000000  1110    1    0    00000000000000000000000000000000
  0000000000000000  0000000000000000  1110    0    0    00000000000000000000000000000000
++================++================++======++===++===++===================================++


Comments: This run shows all operations output the correct result. Also shows register A being
			updated with the output register value on opcode 1101.

